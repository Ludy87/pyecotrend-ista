name: Upload Python Package Pypi

on:
  release:
    types: [created]
  push:
    branches: [main]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: main

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: 3.13
          check-latest: true

      - name: Install dependencies
        run: |
          pip install .[publish]

      - name: Get Version
        id: version
        shell: bash
        run: |
          version="$(python3 ./.github/actions/get_version.py)"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Is Tag exists
        id: checkTag
        uses: actions/github-script@v8.0.0 # v7.0.1
        with:
          script: |
            try {
              await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: `${{ steps.version.outputs.version }}`
              });
              core.setOutput("exists","true");
            } catch (e) {
              // 404 = Release nicht gefunden, alles andere weiterwerfen
              core.setOutput("exists", e.status === 404 ? "false" : "error");
            }

      - if: steps.checkTag.outputs.exists == 'false'
        name: Check Tag
        id: check-tag
        run: |
          if [[ "${{ steps.version.outputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "match=true" >> $GITHUB_OUTPUT
          fi

      - name: ZIP Component Dir
        if: steps.check-tag.outputs.match == 'true'
        run: |
          cd ${{ github.workspace }}/src/pyecotrend_ista
          zip -r pyecotrend_ista.zip ./

      - name: Import GPG key
        if: steps.check-tag.outputs.match == 'true'
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          echo "allow-loopback-pinentry" > ~/.gnupg/gpg-agent.conf
          gpg --list-keys

      - name: Debug Passphrase
        if: steps.check-tag.outputs.match == 'true'
        run: |
          if [ -z "$PASSPHRASE" ]; then
            echo "Passphrase is empty!"
            exit 1
          else
            echo "Passphrase is set."
          fi
        env:
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

      - name: Sign ZIP file
        if: steps.check-tag.outputs.match == 'true'
        env:
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          gpg --detach-sign --batch --yes --pinentry-mode loopback --passphrase "$PASSPHRASE" -a ${{ github.workspace }}/src/pyecotrend_ista/pyecotrend_ista.zip

      - name: Create Release
        if: steps.check-tag.outputs.match == 'true'
        uses: softprops/action-gh-release@6cbd405e2c4e67a21c47fa9e383d020e4e28b836 # v2.3.3
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true

      - name: Upload zip to release
        if: steps.check-tag.outputs.match == 'true'
        uses: svenstaro/upload-release-action@81c65b7cd4de9b2570615ce3aad67a41de5b1a13 # v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: ${{ github.workspace }}/src/pyecotrend_ista/pyecotrend_ista.zip
          asset_name: pyecotrend_ista.zip
          tag: ${{ steps.version.outputs.version }}
          overwrite: true

      - name: Upload zip to release
        if: steps.check-tag.outputs.match == 'true'
        uses: svenstaro/upload-release-action@81c65b7cd4de9b2570615ce3aad67a41de5b1a13 # v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: ${{ github.workspace }}/src/pyecotrend_ista/pyecotrend_ista.zip.asc
          asset_name: pyecotrend_ista.zip.asc
          tag: ${{ steps.version.outputs.version }}
          overwrite: true

      # - name: Build and publish package to TestPyPI
      #   # if: steps.check-tag.outputs.match == 'true'
      #   env:
      #     TWINE_USERNAME: __token__
      #     TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
      #   run: tox -e test-publish -- --non-interactive

      # - name: Build and publish package to PyPI
      #   # if: steps.check-tag.outputs.match == 'true'
      #   env:
      #     TWINE_USERNAME: __token__
      #     TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      #   run: tox -e publish

      - name: Build package
        shell: bash
        run: |
          pip install build
          python -m build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
        with:
          skip-existing: true

      # - name: Publish package to TestPyPI
      #   uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0
      #   with:
      #     user: __token__
      #     password: ${{ secrets.TEST_PYPI_TOKEN }}
      #     repository-url: https://test.pypi.org/legacy/
      #     skip-existing: true
      #     attestations: false
