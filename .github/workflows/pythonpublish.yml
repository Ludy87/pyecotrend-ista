name: Upload Python Package Pypi

on:
  release:
    types: [created]
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          check-latest: true
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[publish]
      - name: Get Version
        id: version
        shell: bash
        run: |
          version="$(python3 ./.github/actions/get_version.py)"
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Is Tag exists
        uses: mukunku/tag-exists-action@v1.6.0
        id: checkTag
        with:
          tag: ${{ steps.version.outputs.version }}
      - name: ZIP Component Dir
        run: |
          cd ${{ github.workspace }}/src/pyecotrend_ista
          zip -r pyecotrend_ista.zip ./
      - name: Upload zip to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/src/pyecotrend_ista/pyecotrend_ista.zip
          asset_name: pyecotrend_ista.zip
          tag: ${{ steps.version.outputs.version }}
          overwrite: true
      - if: steps.checkTag.outputs.exists == 'false'
        name: Check Tag
        id: check-tag
        run: |
          if [[ "${{ steps.version.outputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "match=true" >> $GITHUB_OUTPUT
          fi
      - name: Create Release
        if: steps.check-tag.outputs.match == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: v${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and publish package to TestPyPI
        if: steps.check-tag.outputs.match == 'true'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}
        run: tox -e test-publish
      # - name: Build and publish package to PyPI
      #   if: steps.check-tag.outputs.match == 'true'
      #   env:
      #     TWINE_USERNAME: __token__
      #     TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      #   run: tox -e publish
